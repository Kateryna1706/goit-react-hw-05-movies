{"version":3,"file":"static/js/253.f30c6d81.chunk.js","mappings":"0MAEaA,E,QAAiBC,EAAAA,GAAH,4C,SCgB3B,EAfmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACN,EAAD,WACE,SAAC,KAAD,CAASO,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAnD,SACGG,EAAMK,SAFUL,EAAME,GADZ,KAStB,C,2JCdYI,EAAOX,EAAAA,EAAAA,KAAH,uH,SCgCjB,EA9BmB,WACjB,OAAwCY,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACAC,QAAQC,IAAIH,GAeZ,OACE,UAACF,EAAD,CAAMM,SAda,SAAAC,GACnBA,EAAMC,iBAEN,IAAMC,EAAOF,EAAMG,cACXC,EAAUF,EAAKG,SAASC,YAAxBF,MAER,GAAqB,KAAjBA,EAAMG,OACR,OAAOC,EAAAA,OAAAA,QAAe,gBAExBZ,EAAgB,CAAEa,MAAOL,IACzBF,EAAKQ,OACN,EAGC,WACE,kBACEC,KAAK,OACLC,KAAK,cACLC,WAAS,EACTC,YAAY,mBAEd,mBAAQH,KAAK,SAAb,SAAsB,aAG3B,E,UC9BYI,EAAYjC,EAAAA,EAAAA,KAAH,0CC0DtB,EAlDe,WACb,OAA4BkC,EAAAA,EAAAA,UAAS,MAArC,eAAOjC,EAAP,KAAekC,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAAwCzB,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KA2BA,OA1BAC,QAAQC,IAAIF,IAEZwB,EAAAA,EAAAA,YAAU,WACR,IAAMX,EAAQd,EAAa0B,IAAI,SAC1BZ,IAGLU,GAAW,GAEXG,EAAAA,EAAAA,IAAA,0DAEuDb,EAFvD,8CAIGc,MAAK,SAAAC,GACJ,IAAMzC,EAASyC,EAASC,KAAKC,QAE7B,GADAT,EAAUlC,GACY,IAAlBA,EAAO4C,OACT,MAAM,IAAIC,MAAM,mBAEnB,IACAC,OAAM,SAAAC,GACLtB,EAAAA,OAAAA,QAAe,mBAChB,IACAuB,QAAQZ,GAAW,IACvB,GAAE,CAACxB,KAGF,UAACoB,EAAD,YACE,SAAC,EAAD,IACCG,IACC,SAAC,KAAD,CACEc,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,0BACVC,aAAc,CAAC,EACfC,aAAa,0BACbC,WAAW,UACXC,MAAM,YAGTxD,IAAU,SAACyD,EAAA,EAAD,CAAYzD,OAAQA,MAGpC,C","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MoviesListItem = styled.li`\n  font-size: 25px;\n`;\n","import { NavLink, useLocation } from 'react-router-dom';\nimport { MoviesListItem } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <MoviesListItem key={movie.id}>\n          <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </NavLink>\n        </MoviesListItem>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n\n  font-size: 25px;\n  input {\n    padding: 10px;\n  }\n  button {\n    padding: 10px;\n  }\n`;\n","import { Notify } from 'notiflix';\nimport { Form } from './SearchForm.styled';\nimport { useSearchParams } from 'react-router-dom';\n\nconst SearchForm = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  console.log(searchParams);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const { value } = form.elements.searchValue;\n\n    if (value.trim() === '') {\n      return Notify.warning('Enter value!');\n    }\n    setSearchParams({ query: value });\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"searchValue\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n      <button type=\"submit\">Search</button>\n    </Form>\n  );\n};\n\nexport default SearchForm;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.main`\n  padding: 20px;\n`;\n","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { useEffect, useState } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport axios from 'axios';\nimport { Notify } from 'notiflix';\nimport { Container } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  console.log(setSearchParams);\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) {\n      return;\n    }\n    setLoading(true);\n\n    axios\n      .get(\n        `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=cb48852f2616f6f5995e859b25c73cfe`\n      )\n      .then(response => {\n        const movies = response.data.results;\n        setMovies(movies);\n        if (movies.length === 0) {\n          throw new Error('No movies found!');\n        }\n      })\n      .catch(error => {\n        Notify.failure('No movies found!');\n      })\n      .finally(setLoading(false));\n  }, [searchParams]);\n\n  return (\n    <Container>\n      <SearchForm />\n      {loading && (\n        <MagnifyingGlass\n          visible={true}\n          height=\"300\"\n          width=\"300\"\n          ariaLabel=\"MagnifyingGlass-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"MagnifyingGlass-wrapper\"\n          glassColor=\"#c0efff\"\n          color=\"#e15b64\"\n        />\n      )}\n      {movies && <MoviesList movies={movies} />}\n    </Container>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesListItem","styled","movies","location","useLocation","map","movie","to","id","state","from","title","Form","useSearchParams","searchParams","setSearchParams","console","log","onSubmit","event","preventDefault","form","currentTarget","value","elements","searchValue","trim","Notify","query","reset","type","name","autoFocus","placeholder","Container","useState","setMovies","loading","setLoading","useEffect","get","axios","then","response","data","results","length","Error","catch","error","finally","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","MoviesList"],"sourceRoot":""}