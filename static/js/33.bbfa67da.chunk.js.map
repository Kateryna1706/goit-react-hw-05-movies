{"version":3,"file":"static/js/33.bbfa67da.chunk.js","mappings":"oSAEaA,EAAsBC,EAAAA,EAAAA,IAAH,0CAInBC,EAAaD,EAAAA,EAAAA,OAAH,qSAWVE,EAAmBF,EAAAA,EAAAA,IAAH,yFAKhBG,EAAYH,EAAAA,EAAAA,IAAH,6GAOTI,EAAUJ,EAAAA,EAAAA,IAAH,oMAePK,EAAQL,EAAAA,EAAAA,GAAH,iEAKLM,EAAeN,EAAAA,EAAAA,GAAH,iEAKZO,EAAYP,EAAAA,EAAAA,EAAH,4CAITQ,EAAaR,EAAAA,EAAAA,GAAH,iGAOVS,EAAiBT,EAAAA,EAAAA,GAAH,4C,SCvCrBU,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACZC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IAwGrB,EAnGqB,WAAO,IAAD,IACjBE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAwBpD,OAtBAC,EAAAA,EAAAA,YAAU,WACHb,IAGLM,GAAW,GACXQ,EAAAA,EAAAA,IAAA,6CAE0Cd,EAF1C,8CAIGe,MAAK,SAAAC,GACJ,IAAMC,EAAaD,EAASE,KAE5B,GADAd,EAASa,IACJA,EACH,MAAM,IAAIE,MAAM,YAEnB,IACAC,OAAM,SAAAC,GACLC,EAAAA,OAAAA,QAAe,YAChB,IACAC,QAAQjB,GAAW,IACvB,GAAE,CAACN,KAGF,UAACd,EAAD,WACGmB,IACC,SAAC,KAAD,CACEmB,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,0BACVC,aAAc,CAAC,EACfC,aAAa,0BACbC,WAAW,UACXC,MAAM,aAGV,SAAC,KAAD,CAAMC,GAAIvB,EAAawB,QAAvB,UACE,SAAC7C,EAAD,UAAY,eAGd,SAACE,EAAD,UACa,OAAVa,IACC,iCACE,gBACE+B,IACE/B,EAAMgC,YAAN,yCACsChC,EAAMgC,aAD5C,UAvDd,+EA2DYT,MAAO,IACPU,IAAI,YAEN,UAAC7C,EAAD,YACE,UAACC,EAAD,WACGW,EAAMkC,MAAM,KAAGlC,EAAMmC,aAAaC,MAAM,EAAG,GAAG,QAEjD,UAAC7C,EAAD,WAAW,eAAX,UAA2BS,EAAMqC,WAAjC,SACA,SAAC/C,EAAD,UAAc,cACd,SAACC,EAAD,UAAYS,EAAMsC,YAClB,SAAChD,EAAD,UAAc,YAEd,SAACE,EAAD,UACGQ,EAAMuC,OAAOC,KAAI,SAAAC,GAAI,OACpB,wBAAmBA,EAAKC,MAAfD,EAAKE,GADM,eAQhC,UAACzD,EAAD,YACE,SAACI,EAAD,UAAc,4BACd,UAACG,EAAD,YACE,yBACE,SAAC,KAAD,CAASoC,GAAG,OAAZ,SAAmB,YAErB,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,SAAsB,qBAI5B,SAAC,EAAAe,SAAD,CAAUC,UAAU,yBAAK,eAAzB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAACrD,EAAD,OAC5B,SAAC,KAAD,CAAOoD,KAAK,UAAUC,SAAS,SAACnD,EAAD,aAKxC,C","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContainerForPadding = styled.div`\n  padding: 20px;\n`;\n\nexport const ButtonBack = styled.button`\n  display: block;\n  padding: 5px 10px;\n  margin-bottom: 10px;\n  background-color: transparent;\n  border: none;\n  border-radius: 5%;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const AdditionalInform = styled.div`\n  border-top: 2px solid #000;\n  border-bottom: 2px solid #000;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 20px;\n  /* padding-top: 20px; */\n  padding-bottom: 20px;\n`;\n\nexport const Details = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  p,\n  ul,\n  h2,\n  h3 {\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 40px;\n  font-weight: 700;\n`;\n\nexport const DetailsTitle = styled.h3`\n  font-size: 30px;\n  font-weight: 700;\n`;\n\nexport const Paragraph = styled.p`\n  font-size: 25px;\n`;\n\nexport const ListGenres = styled.ul`\n  display: flex;\n  gap: 20px;\n  list-style: none;\n  font-size: 25px;\n`;\n\nexport const ListAdditional = styled.ul`\n  font-size: 25px;\n`;\n","import {\n  NavLink,\n  Routes,\n  Route,\n  useParams,\n  useLocation,\n  Link,\n} from 'react-router-dom';\nimport { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { MagnifyingGlass } from 'react-loader-spinner';\nimport { Notify } from 'notiflix';\nimport { lazy, Suspense } from 'react';\nimport {\n  AdditionalInform,\n  ButtonBack,\n  Container,\n  ContainerForPadding,\n  Details,\n  DetailsTitle,\n  ListAdditional,\n  ListGenres,\n  Paragraph,\n  Title,\n} from './MovieDetails.styled';\n\nconst Cast = lazy(() => import('components/Cast/Cast'));\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  const backLinkHref = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    setLoading(true);\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=cb48852f2616f6f5995e859b25c73cfe`\n      )\n      .then(response => {\n        const foundMovie = response.data;\n        setMovie(foundMovie);\n        if (!foundMovie) {\n          throw new Error('No found!');\n        }\n      })\n      .catch(error => {\n        Notify.failure('No found!');\n      })\n      .finally(setLoading(false));\n  }, [movieId]);\n\n  return (\n    <ContainerForPadding>\n      {loading && (\n        <MagnifyingGlass\n          visible={true}\n          height=\"300\"\n          width=\"300\"\n          ariaLabel=\"MagnifyingGlass-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"MagnifyingGlass-wrapper\"\n          glassColor=\"#c0efff\"\n          color=\"#e15b64\"\n        />\n      )}\n      <Link to={backLinkHref.current}>\n        <ButtonBack>Go back</ButtonBack>\n      </Link>\n\n      <Container>\n        {movie !== null && (\n          <>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  : `${defaultImg}`\n              }\n              width={250}\n              alt=\"poster\"\n            />\n            <Details>\n              <Title>\n                {movie.title} ({movie.release_date.slice(0, 4)})\n              </Title>\n              <Paragraph>User Score: {`${movie.vote_count}%`}</Paragraph>\n              <DetailsTitle>Overview</DetailsTitle>\n              <Paragraph>{movie.overview}</Paragraph>\n              <DetailsTitle>Genres</DetailsTitle>\n\n              <ListGenres>\n                {movie.genres.map(item => (\n                  <li key={item.id}>{item.name}</li>\n                ))}\n              </ListGenres>\n            </Details>\n          </>\n        )}\n      </Container>\n      <AdditionalInform>\n        <DetailsTitle>Additional information</DetailsTitle>\n        <ListAdditional>\n          <li>\n            <NavLink to=\"cast\">Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\">Reviews</NavLink>\n          </li>\n        </ListAdditional>\n      </AdditionalInform>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </ContainerForPadding>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["ContainerForPadding","styled","ButtonBack","AdditionalInform","Container","Details","Title","DetailsTitle","Paragraph","ListGenres","ListAdditional","Cast","lazy","Reviews","movieId","useParams","useState","movie","setMovie","loading","setLoading","location","useLocation","backLinkHref","useRef","state","from","useEffect","axios","then","response","foundMovie","data","Error","catch","error","Notify","finally","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","to","current","src","poster_path","alt","title","release_date","slice","vote_count","overview","genres","map","item","name","id","Suspense","fallback","path","element"],"sourceRoot":""}